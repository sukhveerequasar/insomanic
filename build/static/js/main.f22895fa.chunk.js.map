{"version":3,"sources":["assets/images/imgpsh_fullsize_anim.png","components/Map/index.jsx","components/EventDetails/UpcomingEvents.js","components/TimePicker/index.jsx","Modal/ViewLayout/index.jsx","components/DatePicker/index.jsx","components/Dob/index.jsx","components/SelectDatePicker/index.jsx","components/EventDetails/index.js","components/Event/index.jsx","components/Venue/index.js","components/VenuePage/index.jsx","components/PastEvent/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Map","UpcomingEvents","_ref","venueId","loadingUpcoming","setLoadingUpcoming","useState","upcoming","setUpcoming","useEffect","async","response","axios","get","params","venue_id","data","error","console","fetchData","React","createElement","className","colSpan","map","item","index","Fragment","key","moment","date_from","format","href","concat","id","width","height","src","featured_image","alt","name","date","BasicTimePicker","notchedOutline","document","querySelector","style","outline","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","TimePicker","ViewLayout","isOpen","onRequestClose","setResponse","myBox","setMyBox","imgWidth","setImgWidth","imgHeight","setImgHeight","url","setUrl","hoveredBoxIndex","setHoveredBoxIndex","loader","setLoader","fetch","localStorage","getItem","log","box_details","image_url","err","boxes","box","x","y","box_name","sectionName","parseFloat","canvasRef","useRef","drawBoxes","highlightedSection","canvas","current","context","getContext","image","Image","clearRect","drawImage","strokeStyle","lineWidth","font","forEach","section","strokeRect","fillStyle","Promise","resolve","onload","loadImage","Modal","contentLabel","overlay","backgroundColor","content","top","left","right","bottom","marginRight","transform","background","border","padding","maxHeight","zIndex","overflow","Loader","type","bgColor","color","size","position","onClick","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","ref","onMouseMove","event","rect","getBoundingClientRect","mouseX","clientX","mouseY","clientY","isHovering","i","length","setItem","DateSelector","DateComponent","dob","onChange","placeholder","selectedDate","setSelectedDate","DatePicker","selected","selectsStart","showMonthDropdown","showYearDropdown","placeholderText","dateFormat","showTimeInput","popperClassName","utcOffset","Date","getTimezoneOffset","yearDropdownItemNumber","scrollableYearDropdown","dropdownMode","popperModifiers","offset","enabled","preventOverflow","escapeWithReference","boundariesElement","arrow","SelectDatePicker","selectedDay","setSelectedDay","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","days","day","label","value","months","month","years","Array","from","_","getFullYear","year","customStyles","control","provided","singleValue","Select","selectedOption","options","styles","EventDetails","_eventDetails$feature","navigate","useNavigate","mySection","setMySection","useParams","numberOfEvents","setNumberOfEvents","isModalOpen","setModalOpen","startTime","setDob","bookingNote","guestsNumber","eventDetails","setEventDetails","eventId","setEventId","isPopupOpen","setPopupOpen","events","setEvents","setError","formSubmitted","setFormSubmitted","setVenueId","showTextarea","setShowTextarea","setSelectedOption","isLabelHidden","setIsLabelHidden","removeItem","formData","setFormData","arrival_time","first_name","last_name","phone","email","booking_note","no_of_seats","arrivalTime","setArrivalTime","setValue","venueResponse","post","fetchEventDetails","date_search","fetchDataByDateAndVenue","handleDobChange","start","class","handleClick","closeModal","onSubmit","e","preventDefault","getElementById","event_id","status","toast","success","autoClose","setTimeout","for","onTimeChange","required","sanitizedValue","target","replace","inputMode","DOB","selectedValue","display","min","ToastContainer","Event","Venue","eventList","setEventList","loading","setLoading","vid","setVid","encodeURIComponent","Link","to","past","VenuePage","PastEvent","loadStripe","App","Router","Routes","Route","path","element","Navigate","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.f22895fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/imgpsh_fullsize_anim.1d1e7c3a.png\";","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\nimport { useLoadScript } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n  width: '518px',\r\n  height: '316px'\r\n};\r\n\r\nconst Map = ({ apiKey, address }) => {\r\n  const [location, setLocation] = useState({ lat: 0, lng: 0 });\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: apiKey\r\n  });\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    if (!isLoaded) return;\r\n\r\n    const geocoder = new window.google.maps.Geocoder();\r\n    geocoder.geocode({ address: address }, (results, status) => {\r\n      if (status === 'OK' && results[0]) {\r\n        setLocation({\r\n          lat: results[0].geometry.location.lat(),\r\n          lng: results[0].geometry.location.lng()\r\n        });\r\n      } else {\r\n        console.error('Geocode was not successful for the following reason:', status);\r\n      }\r\n    });\r\n  }, [isLoaded, address]);\r\n\r\n  if (loadError) return <div>Error loading Google Maps</div>;\r\n  if (!isLoaded) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={location}\r\n      zoom={15}\r\n    >\r\n      <Marker position={location} />\r\n    </GoogleMap>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../Custom.css';\nimport moment from 'moment';\n\nconst UpcomingEvents = ({ venueId }) => {\n  const [loadingUpcoming, setLoadingUpcoming] = useState(true);\n  const [upcoming, setUpcoming] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoadingUpcoming(true);\n\n        const response = await axios.get('https://event-backend.isdemo.in/api/v1/upcoming_events', {\n          params: {\n            venue_id: venueId,\n          },\n        });\n\n        setUpcoming(response.data.data);\n      } catch (error) {\n        console.error('Error fetching upcoming events:', error);\n      } finally {\n        setLoadingUpcoming(false);\n      }\n    };\n\n    fetchData();\n  }, [venueId]);\n\n  if (loadingUpcoming) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"\">\n      <div className=\"events_box\">\n        <div className=\"events\">\n          <table className=\"event\">\n            <thead>\n              <tr>\n                <td>Date</td>\n                <td className=\"event-thumb-head\">Event Image</td>\n                {/* <td>Artist</td> */}\n                <td>Event</td>\n              </tr>\n              <tr className=\"space\">\n                <td colSpan=\"5\"></td>\n              </tr>\n            </thead>\n            <tbody>\n              {upcoming.map((item, index) => (\n                <React.Fragment key={index}>\n                  <tr>\n                    <td className=\"event-date\">{moment(item.date_from).format(\"DD/MM/YYYY\")}</td>\n                    <td className=\"event-thumb\">\n                      <a href={`/event/${item.id}`}>\n                        <img width=\"90px\" height=\"100px\" src={item.featured_image} alt=\"Event\" />\n                      </a>\n                    </td>\n                    {/* <td className=\"event-artist\">{item.name}</td> */}\n                    <td className=\"event-title\">\n                      <a href={`/event/${item.id}`}>{item.name}</a>\n                    </td>\n                  </tr>\n                  <tr className=\"space h-10\">\n                    <td colSpan=\"5\"></td>\n                  </tr>\n                </React.Fragment>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div className=\"event-mobile\">\n        <ul className=\"event-list\">\n          {upcoming.map((item, index) => (\n            <li key={index}>\n              <span className=\"img-thumb\">\n                <a href={`/event/${item.id}`}>\n                  <img width=\"70px\" height=\"100px\" src={item.featured_image} alt=\"Event\" />\n                </a>\n              </span>\n              <p><span>Date :</span> <a href={`/event/${item.id}`}>{moment(item.date).format(\"DD/MM/YYYY\")}</a></p>\n              {/* <p><span>Artist :</span> <a href={`/event/${item.id}`}>{item.name}</a></p> */}\n              <p><span>Event :</span> <a href={`/event/${item.id}`}>{item.name}</a></p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n  \nexport default UpcomingEvents;\n\n\n\n\n","\r\n// import React, { useState } from 'react';\r\n// import TimePicker from 'rc-time-picker';\r\n// import 'rc-time-picker/assets/index.css';\r\n// import moment from 'moment';\r\n\r\n// const Timepicker = ({ value, onChange, placeholder, className }) => {\r\n//   const [timePickerVisible, setTimePickerVisible] = useState(false);\r\n\r\n//   const handleTimeChange = (time) => {\r\n//     // Call the onChange callback with the selected time\r\n//     onChange(time);\r\n\r\n//     // Close the TimePicker popup\r\n//     setTimePickerVisible(false);\r\n//   };\r\n\r\n//   const toggleTimePicker = () => {\r\n//     // Toggle the visibility of the TimePicker\r\n//     setTimePickerVisible(!timePickerVisible);\r\n//   };\r\n\r\n//   return (\r\n//     <div onClick={toggleTimePicker}>\r\n//       <TimePicker\r\n//         onChange={handleTimeChange}\r\n//         value={value ? moment(value) : null}\r\n//         showSecond={false}\r\n//         format=\"h:mm A\"\r\n//         use12Hours\r\n//         placeholder={placeholder}\r\n//         className={`custom-timepicker ${className}`}\r\n//         open={timePickerVisible}\r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Timepicker;\r\n// import 'rc-time-picker/assets/index.css';\r\n// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import moment from 'moment';\r\n// import TimePicker from 'rc-time-picker';\r\n\r\n// const format = 'h:mm a';\r\n// const now = moment().hour(0).minute(0);\r\n\r\n// function onChange(value) {\r\n//   console.log(value && value.format(format));\r\n// }\r\n\r\n// const Timepicker = () => (\r\n  \r\n//   <TimePicker\r\n//     showSecond={false}\r\n//     defaultValue={now}\r\n//     className=\"xxx\"\r\n//     onChange={onChange}\r\n//     format={format}\r\n//     use12Hours\r\n//     inputReadOnly\r\n//   />\r\n// );\r\n\r\n\r\n\r\n// export default Timepicker;\r\n// import 'rc-time-picker/assets/index.css';\r\n// import React, { useState } from 'react';\r\n// import moment from 'moment';\r\n// import TimePicker from 'rc-time-picker';\r\n\r\n// const format = 'h:mm a';\r\n// const now = moment().hour(0).minute(0);\r\n\r\n// const Timepicker = () => {\r\n//   const [value, setValue] = useState(now);\r\n\r\n//   const onChange = (newValue) => {\r\n//     console.log(newValue && newValue.format(format));\r\n//     setValue(newValue);\r\n//   };\r\n\r\n//   return (\r\n//     <TimePicker\r\n//       showSecond={false}\r\n//       defaultValue={now}\r\n//       className=\"xxx\"\r\n//       onChange={onChange}\r\n//       format={format}\r\n//       use12Hours\r\n//       inputReadOnly\r\n//       addon={() => (\r\n//         <button onClick={() => console.log(value)}>OK</button>\r\n//       )}\r\n//     />\r\n//   );\r\n// };\r\n\r\n// export default Timepicker;\r\n// import 'rc-time-picker/assets/index.css';\r\n// import React, { useState, useRef } from 'react';\r\n// import moment from 'moment';\r\n// import TimePicker from 'rc-time-picker';\r\n\r\n// const format = 'h:mm a';\r\n// const now = moment().hour(0).minute(0);\r\n\r\n// const Timepicker = () => {\r\n//   const [value, setValue] = useState(now);\r\n//   const [selectedHour, setSelectedHour] = useState(null);\r\n//   const [selectedMinute, setSelectedMinute] = useState(null);\r\n//   const [selectedPeriod, setSelectedPeriod] = useState(null);\r\n//   const pickerRef = useRef(null);\r\n//   const [popupVisible, setPopupVisible] = useState(false);\r\n\r\n//   const onChange = (newValue) => {\r\n//     setValue(newValue);\r\n//     setSelectedHour(newValue && newValue.hour());\r\n//     setSelectedMinute(newValue && newValue.minute());\r\n//     setSelectedPeriod(newValue && newValue.format('a'));\r\n//   };\r\n\r\n//   const handleOpenPopup = () => {\r\n//     setPopupVisible(true);\r\n//   };\r\n\r\n//   const handleClosePopup = () => {\r\n//     // Check if all values are selected before closing the popup\r\n//     if (selectedHour !== null && selectedMinute !== null && selectedPeriod !== null) {\r\n//       // All values are selected, close the popup\r\n//       setPopupVisible(false);\r\n//     } else {\r\n//       // Popup should not close until all values are selected\r\n//       // You can add your custom logic here (e.g., show a message)\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <TimePicker\r\n//         ref={pickerRef}\r\n//         showSecond={false}\r\n//         defaultValue={now}\r\n//         className=\"xxx\"\r\n//         value={value}\r\n//         onChange={onChange}\r\n//         format={format}\r\n//         use12Hours\r\n//         inputReadOnly\r\n//         placeholder=\"Select Time\"\r\n//         open={popupVisible}\r\n//         onOpen={handleOpenPopup}\r\n//         onClose={handleClosePopup}\r\n//       />\r\n//       {popupVisible && (\r\n//         <div>\r\n//           <select\r\n//             value={selectedHour}\r\n//             onChange={(e) => setSelectedHour(parseInt(e.target.value))}\r\n//           >\r\n//             {Array.from({ length: 12 }, (_, i) => i + 1).map((hour) => (\r\n//               <option key={hour} value={hour}>\r\n//                 {hour}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//           <select\r\n//             value={selectedMinute}\r\n//             onChange={(e) => setSelectedMinute(parseInt(e.target.value))}\r\n//           >\r\n//             {Array.from({ length: 60 }, (_, i) => i).map((minute) => (\r\n//               <option key={minute} value={minute}>\r\n//                 {minute < 10 ? `0${minute}` : minute}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//           <select\r\n//             value={selectedPeriod}\r\n//             onChange={(e) => setSelectedPeriod(e.target.value)}\r\n//           >\r\n//             <option value=\"AM\">AM</option>\r\n//             <option value=\"PM\">PM</option>\r\n//           </select>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Timepicker;\r\n\r\n// import React, { useState, useRef } from 'react';\r\n// import { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\n// import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\n// import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\n// import { TimePicker } from '@mui/x-date-pickers/TimePicker';\r\n// import '../Custom.css'; \r\n\r\n// export default function BasicTimePicker() {\r\n//   return (\r\n//     <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n//       <DemoContainer components={['TimePicker']}>\r\n//         <TimePicker label=\"Estimated Time of Arrival\"  className=\"custom-timepicker\"/>\r\n        \r\n//       </DemoContainer>\r\n//     </LocalizationProvider>\r\n//   );\r\n// }\r\nimport React, { useEffect } from 'react';\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\r\n\r\nexport default function BasicTimePicker() {\r\n  useEffect(() => {\r\n    // Remove outline from MuiOutlinedInput-notchedOutline\r\n    const notchedOutline = document.querySelector('.MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline');\r\n    if (notchedOutline) {\r\n      notchedOutline.style.outline = 'none';\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n      <DemoContainer components={['TimePicker']}>\r\n        <TimePicker />\r\n      </DemoContainer>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport React, { useRef, useEffect, useState } from 'react';\r\n// import Modal from 'react-modal';\r\n// import Modal from 'react-modal';\r\nimport Modal from 'react-modal';\r\nimport axios from 'axios'; \r\nimport Loader from \"react-js-loader\";\r\nimport './../../components/Custom.css';\r\n\r\n\r\nconst ViewLayout = ({ isOpen, onRequestClose }) => {\r\n  const [response, setResponse] = useState([]);\r\n  const [myBox, setMyBox] = useState([]);\r\n  const [imgWidth, setImgWidth] = useState();\r\n  const [imgHeight, setImgHeight] = useState();\r\n  const [url, setUrl] = useState();\r\n  const [hoveredBoxIndex, setHoveredBoxIndex] = useState(null);\r\n  const [loader,setLoader] =useState(true)\r\n\r\n  // const fetch = async () => {\r\n  //   const vid = localStorage.getItem('Venue');\r\n  \r\n  //   try {\r\n      \r\n  //     const response = await axios.get(`https://event-backend.isdemo.in/api/v1/get_layout`, {\r\n  //       params: {\r\n  //         venue_id: 25,\r\n  //       },\r\n  //     });\r\n  \r\n  //     console.log(response.data, 'Response coming from the get Layout API ======>>');\r\n  //     setResponse(response.data[0]);\r\n  //     setMyBox(response.data[0].box_details);\r\n  //     setUrl(response.data[0].image_url);\r\n  //   } catch (err) {\r\n  //     console.error(err);\r\n  //   }\r\n  // };\r\n  useEffect(() => {\r\n    fetch();\r\n  }, []);\r\n \r\n  const fetch = async () => {\r\n    const vid = localStorage.getItem('Venue');\r\n    \r\n    try {\r\n      // Set loader to true only once, at the beginning of the API call\r\n      setLoader(true);\r\n  \r\n      const response = await axios.get(`https://event-backend.isdemo.in/api/v1/get_layout`, {\r\n        params: {\r\n          venue_id: 25,\r\n        },\r\n      });\r\n  \r\n      console.log(response.data, 'Response coming from the get Layout API ======>>');\r\n      setResponse(response.data[0]);\r\n      setMyBox(response.data[0].box_details);\r\n      setUrl(response.data[0].image_url);\r\n    } catch (err) {\r\n      setLoader(false)\r\n      console.error(err);\r\n    } finally {\r\n      // Set loader to false regardless of success or error\r\n      setLoader(false);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const boxes = myBox.map((box, index) => {\r\n    const { x, y, width, height, box_name, sectionName } = box;\r\n    return [parseFloat(x), parseFloat(y)\r\n, parseFloat(width), parseFloat(height), box_name, sectionName];\r\n  });\r\n\r\n  \r\n\r\n  const canvasRef = useRef(null);\r\n\r\n  const drawBoxes = (highlightedSection) => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) {\r\n      return;\r\n    }\r\n\r\n    const context = canvas.getContext('2d');\r\n    if (!context) {\r\n      return;\r\n    }\r\n\r\n    const image = new Image();\r\n    image.src = url;\r\n\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    context.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n\r\n    context.strokeStyle = 'red';\r\n    context.lineWidth = 16;\r\n    context.font = '14px Arial';\r\n\r\n    boxes.forEach((box, index) => {\r\n      const [x, y, width, height, name, section] = box;\r\n      context.strokeStyle = section === highlightedSection ? 'gold' : 'transparent';\r\n      context.strokeRect(x, y, width, height);\r\n      context.fillStyle = 'transparent';\r\n      // context.fillText(name, x + 5, y + 15);\r\n    });\r\n  };\r\n\r\n  const handleMouseMove = (event) => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) {\r\n      return;\r\n    }\r\n\r\n    const context = canvas.getContext('2d');\r\n    if (!context) {\r\n      return;\r\n    }\r\n\r\n    const rect = canvas.getBoundingClientRect();\r\n    const mouseX = event.clientX - rect.left;\r\n    const mouseY = event.clientY - rect.top;\r\n\r\n    let isHovering = false;\r\n\r\n    for (let i = 0; i < boxes.length; i++) {\r\n      const [x, y, width, height, name, section] = boxes[i];\r\n      if (mouseX >= x && mouseX <= x + width && mouseY >= y && mouseY <= y + height) {\r\n        setHoveredBoxIndex(i);\r\n        isHovering = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!isHovering) {\r\n      setHoveredBoxIndex(null);\r\n    }\r\n\r\n    const highlightedSection = isHovering && hoveredBoxIndex !== null ? boxes[hoveredBoxIndex][5] : null;\r\n    drawBoxes(highlightedSection);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadImage = async () => {\r\n      const image = new Image();\r\n      image.src = url;\r\n\r\n      await new Promise((resolve) => {\r\n        image.onload = resolve;\r\n      });\r\n\r\n      const canvas = canvasRef.current;\r\n      if (!canvas) {\r\n        return;\r\n      }\r\n\r\n      const context = canvas.getContext('2d');\r\n      if (!context) {\r\n        return;\r\n      }\r\n\r\n      drawBoxes();\r\n      setImgWidth(image.width);\r\n      setImgHeight(image.height);\r\n    };\r\n\r\n    if (url) {\r\n      loadImage();\r\n    }\r\n  }, [url, canvasRef.current, isOpen, hoveredBoxIndex]);\r\n\r\n  // useEffect(() => {\r\n  //   fetch();\r\n  // }, [url]);\r\n\r\n// ... (previous code)\r\n\r\nconst handleCanvasClick = (event) => {\r\n  const canvas = canvasRef.current;\r\n  if (!canvas) {\r\n    return;\r\n  }\r\n\r\n  const context = canvas.getContext('2d');\r\n  const rect = canvas.getBoundingClientRect();\r\n  const mouseX = event.clientX - rect.left;\r\n  const mouseY = event.clientY - rect.top;\r\n\r\n  for (let i = 0; i < boxes.length; i++) {\r\n    const [x, y, width, height, name, section] = boxes[i];\r\n    if (mouseX >= x && mouseX <= x + width && mouseY >= y && mouseY <= y + height) {\r\n      // alert(`Clicked on section: ${section}`);\r\n      localStorage.setItem('Section',section)\r\n      onRequestClose();\r\n      break;\r\n    }\r\n  }\r\n};\r\n\r\nreturn (\r\n  <Modal\r\n    isOpen={isOpen}\r\n    onRequestClose={onRequestClose}\r\n    contentLabel=\"Example Modal\"\r\n    style={{\r\n      overlay: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.85)',\r\n      },\r\n      content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        background: 'none',\r\n        border: 'none',\r\n        padding: 0,\r\n        maxHeight: '100vh',\r\n        zIndex: 0,\r\n      },\r\n    }}\r\n  >\r\n   \r\n    {loader ? (\r\n      <div style={{ overflow: 'hidden' }}> {/* Hide overflow while loader is displayed */}\r\n        <Loader type=\"spinner-cub\" bgColor={'white'} color={'white'} size={100} className=\"loader\" />\r\n      </div>\r\n    ) : (\r\n      <div className='p-17 bg-[transparent]'>\r\n        <h1 className='text-center text-lg'>SELECT SECTION </h1>\r\n       <div style={{ position: 'absolute', top: 0, right: 0 }}>\r\n    <button onClick={onRequestClose} className=\"close-button\">\r\n      <svg className=\"h-4 w-4 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n      </svg>\r\n    </button>\r\n  </div>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={imgWidth || 600}\r\n        height={imgHeight || 400}\r\n        // style={{ border: '1px solid #ccc' }}\r\n        onMouseMove={handleMouseMove}\r\n        onClick={handleCanvasClick}\r\n        className='convasdata'\r\n      ></canvas>\r\n      </div>\r\n      \r\n    )}\r\n      \r\n  </Modal>\r\n);\r\n};\r\nexport default ViewLayout;\r\n\r\n\r\n","\r\nimport React, { useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport '../Custom.css'; // Adjust the path as needed\r\n\r\nconst DateSelector = () => {\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  return (\r\n    <div className=\"input block w-full placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:outline-none focus:ring-white-300 sm:text-sm sm:leading-6 border-2 border-gray-600 rounded-md px-4 py-2 text-gray-700 dark:text-gray-400 \">\r\n      <DatePicker\r\n        selected={selectedDate}\r\n        onChange={date => setSelectedDate(date)}\r\n        dateFormat=\"EEEE, MMM d, yyyy\"\r\n        className=\"p-2 border border-gray-300 rounded-md text-gray-700 \"\r\n        wrapperClassName=\"flex-none\" // This class will prevent the input field from taking full width\r\n        customInput={<CustomInput />} // Use a custom input component to render only the placeholder text\r\n      \r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CustomInput = ({ value, onClick }) => (\r\n  <div onClick={onClick} className=\"cursor-pointer\">\r\n    {value || 'Select a date'} {/* Display the selected date or placeholder text */}\r\n  </div>\r\n);\r\n\r\nexport default DateSelector;\r\n\r\n\r\n","// import React, { useState, useEffect } from 'react';\r\n// import DatePicker from 'react-datepicker';\r\n// import 'react-datepicker/dist/react-datepicker.css';\r\n// import { Placeholder } from 'react-bootstrap';\r\nimport '../Custom.css'; // Adjust the path as needed\r\n// const Dob = ({ dob, onChange, placeholder }) => {\r\n//   const [selectedDate, setSelectedDate] = useState(dob);\r\n\r\n//   useEffect(() => {\r\n//     // Update the state when the dob prop changes\r\n//     setSelectedDate(dob);\r\n//   }, [dob]);\r\n\r\n//   const handleDateChange = (date) => {\r\n//     setSelectedDate(date);\r\n\r\n//     // Call the parent component's onChange function with the updated date\r\n//     onChange(date);\r\n//   };\r\n\r\n//   return (\r\n// <DatePicker\r\n//   selected={selectedDate}\r\n//   onChange={handleDateChange}\r\n//   selectsStart\r\n//   showMonthDropdown\r\n//   showYearDropdown\r\n//   placeholderText='' // Remove the placeholder\r\n//   dateFormat=\"yyyy-MM-dd\"\r\n//   className=\"input  date-birth block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n//   showTimeInput={false}\r\n//   popperClassName=\"light-popper\"\r\n//   utcOffset={new Date().getTimezoneOffset()}\r\n//   yearDropdownItemNumber={200}  // Adjust the number of visible years as needed\r\n//   scrollableYearDropdown  // Enable scrollable year dropdown\r\n//   dropdownMode=\"scroll\"\r\n//   popperModifiers={{\r\n//     offset: {\r\n//       enabled: true,\r\n//       offset: '0, 5' // Adjust the offset as needed\r\n//     },\r\n//     preventOverflow: {\r\n//       enabled: true,\r\n//       escapeWithReference: false,\r\n//       boundariesElement: 'viewport'\r\n//     },\r\n//     arrow: {\r\n//       enabled: false // Disable the arrow\r\n//     }\r\n//   }}\r\n\r\n\r\n// />\r\n\r\n//   );\r\n// };\r\n\r\n// export default Dob;\r\nimport React, { useState, useEffect } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Placeholder } from 'react-bootstrap';\r\n\r\nconst DateComponent = ({ dob, onChange, placeholder }) => {\r\n  const [selectedDate, setSelectedDate] = useState(dob);\r\n\r\n  useEffect(() => {\r\n    // Update the state when the dob prop changes\r\n    setSelectedDate(dob);\r\n  }, [dob]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n\r\n    // Call the parent component's onChange function with the updated date\r\n    onChange(date);\r\n  };\r\n\r\n  return (\r\n<DatePicker\r\n  selected={selectedDate}\r\n  onChange={handleDateChange}\r\n  selectsStart\r\n  showMonthDropdown\r\n  showYearDropdown\r\n  placeholderText={placeholder}\r\n  dateFormat=\"yyyy-MM-dd\"\r\n  className=\"bg-transparent border-none\"\r\n  showTimeInput={false}\r\n  popperClassName=\"light-popper\"\r\n  utcOffset={new Date().getTimezoneOffset()}\r\n  yearDropdownItemNumber={200}  // Adjust the number of visible years as needed\r\n  scrollableYearDropdown  // Enable scrollable year dropdown\r\n  dropdownMode=\"scroll\"\r\n  popperModifiers={{\r\n        offset: {\r\n          enabled: true,\r\n          offset: '0, 5' // Adjust the offset as needed\r\n        },\r\n        preventOverflow: {\r\n          enabled: true,\r\n          escapeWithReference: false,\r\n          boundariesElement: 'viewport'\r\n        },\r\n        arrow: {\r\n          enabled: false // Disable the arrow\r\n        }\r\n      }}\r\n/>\r\n\r\n  );\r\n};\r\n\r\nexport default DateComponent;","// // import React, { useState, useEffect } from 'react';\r\n// // import DatePicker from 'react-datepicker';\r\n// // import 'react-datepicker/dist/react-datepicker.css';\r\n// // import { Placeholder } from 'react-bootstrap';\r\n// import '../Custom.css'; // Adjust the path as needed\r\n// // const Dob = ({ dob, onChange, placeholder }) => {\r\n// //   const [selectedDate, setSelectedDate] = useState(dob);\r\n\r\n// //   useEffect(() => {\r\n// //     // Update the state when the dob prop changes\r\n// //     setSelectedDate(dob);\r\n// //   }, [dob]);\r\n\r\n// //   const handleDateChange = (date) => {\r\n// //     setSelectedDate(date);\r\n\r\n// //     // Call the parent component's onChange function with the updated date\r\n// //     onChange(date);\r\n// //   };\r\n\r\n// //   return (\r\n// // <DatePicker\r\n// //   selected={selectedDate}\r\n// //   onChange={handleDateChange}\r\n// //   selectsStart\r\n// //   showMonthDropdown\r\n// //   showYearDropdown\r\n// //   placeholderText='' // Remove the placeholder\r\n// //   dateFormat=\"yyyy-MM-dd\"\r\n// //   className=\"input  date-birth block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n// //   showTimeInput={false}\r\n// //   popperClassName=\"light-popper\"\r\n// //   utcOffset={new Date().getTimezoneOffset()}\r\n// //   yearDropdownItemNumber={200}  // Adjust the number of visible years as needed\r\n// //   scrollableYearDropdown  // Enable scrollable year dropdown\r\n// //   dropdownMode=\"scroll\"\r\n// //   popperModifiers={{\r\n// //     offset: {\r\n// //       enabled: true,\r\n// //       offset: '0, 5' // Adjust the offset as needed\r\n// //     },\r\n// //     preventOverflow: {\r\n// //       enabled: true,\r\n// //       escapeWithReference: false,\r\n// //       boundariesElement: 'viewport'\r\n// //     },\r\n// //     arrow: {\r\n// //       enabled: false // Disable the arrow\r\n// //     }\r\n// //   }}\r\n\r\n\r\n// // />\r\n\r\n// //   );\r\n// // };\r\n\r\n// // export default Dob;\r\n// import React, { useState, useEffect } from 'react';\r\n// import DatePicker from 'react-datepicker';\r\n// import 'react-datepicker/dist/react-datepicker.css';\r\n// import { Placeholder } from 'react-bootstrap';\r\n\r\n// const SelectDatePicker = ({ dob, onChange, placeholder }) => {\r\n//   const [selectedDate, setSelectedDate] = useState(dob);\r\n\r\n//   useEffect(() => {\r\n//     // Update the state when the dob prop changes\r\n//     setSelectedDate(dob);\r\n//   }, [dob]);\r\n\r\n//   const handleDateChange = (date) => {\r\n//     setSelectedDate(date);\r\n\r\n//     // Call the parent component's onChange function with the updated date\r\n//     onChange(date);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"input block w-full placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:outline-none focus:ring-white-300 sm:text-sm sm:leading-6 border-2 border-gray-600 rounded-md px-4 py-2 text-gray-700 dark:text-gray-400 \">\r\n// <DatePicker\r\n//   selected={selectedDate}\r\n//   onChange={handleDateChange}\r\n//   selectsStart\r\n//   showMonthDropdown\r\n//   showYearDropdown\r\n//   placeholderText={placeholder}\r\n//   dateFormat=\"yyyy-MM-dd\"\r\n//   className=\"bg-transparent\"\r\n//   showTimeInput={false}\r\n//   popperClassName=\"light-popper\"\r\n//   utcOffset={new Date().getTimezoneOffset()}\r\n//   yearDropdownItemNumber={200}  // Adjust the number of visible years as needed\r\n//   scrollableYearDropdown  // Enable scrollable year dropdown\r\n//   dropdownMode=\"scroll\"\r\n//   popperModifiers={{\r\n//         offset: {\r\n//           enabled: true,\r\n//           offset: '0, 5' // Adjust the offset as needed\r\n//         },\r\n//         preventOverflow: {\r\n//           enabled: true,\r\n//           escapeWithReference: false,\r\n//           boundariesElement: 'viewport'\r\n//         },\r\n//         arrow: {\r\n//           enabled: false // Disable the arrow\r\n//         }\r\n//       }}\r\n// />\r\n// </div>\r\n//   );\r\n// };\r\n\r\n// export default SelectDatePicker;\r\n\r\n// import React, { useState } from 'react';\r\n// import '../Custom.css'; \r\n\r\n// const SelectDatePicker = () => {\r\n//   const [selectedDay, setSelectedDay] = useState(''); // Initial day\r\n//   const [selectedMonth, setSelectedMonth] = useState(''); // Initial month\r\n//   const [selectedYear, setSelectedYear] = useState(''); // Initial year\r\n\r\n//   const daysInMonth = (month, year) => {\r\n//     return new Date(year, month, 0).getDate(); // Get the number of days in a month\r\n//   };\r\n\r\n//   const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']; // Array of day names\r\n//   const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']; // Array of month names\r\n//   const years = Array.from({ length: 10 }, (_, i) => new Date().getFullYear() - 5 + i); // Array of 10 years starting from 5 years ago\r\n\r\n//   const handleDayChange = (e) => {\r\n//     setSelectedDay(e.target.value);\r\n//   };\r\n\r\n//   const handleMonthChange = (e) => {\r\n//     setSelectedMonth(e.target.value);\r\n//   };\r\n\r\n//   const handleYearChange = (e) => {\r\n//     setSelectedYear(e.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"input block w-full placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:outline-none focus:ring-white-300 sm:text-sm sm:leading-6 border-2 border-gray-600 rounded-md  py-1 text-gray-700 dark:text-gray-400 \">\r\n//       <div className=\"flex space-x-5\">\r\n//         <select\r\n//           value={selectedDay}\r\n//           onChange={handleDayChange}\r\n//           className=\"px-1 py-1 border-2 border-gray-600 rounded-md focus:outline-none text-sm   bg-transparent\"\r\n//         >\r\n//           <option value=\"\" disabled className=\"booking-date text-gray-500\">Day</option>\r\n//           {days.map((day, index) => (\r\n//             <option key={index} value={day}>{day}</option>\r\n//           ))}\r\n//         </select>\r\n//         <select\r\n//           value={selectedMonth}\r\n//           onChange={handleMonthChange}\r\n//           className=\"px-1 py-1 border-2 border-gray-600 rounded-md focus:outline-none text-sm text-white bg-transparent\"\r\n//         >\r\n//           <option value=\"\" disabled>Month</option>\r\n//           {months.map((month, index) => (\r\n//             <option key={index} value={month}>{month}</option>\r\n//           ))}\r\n//         </select>\r\n//         <select\r\n//           value={selectedYear}\r\n//           onChange={handleYearChange}\r\n//           className=\" px-4 py-1 border-2 border-gray-600 rounded-md focus:outline-none text-sm text-white bg-transparent w-23\"\r\n//         >\r\n//           <option value=\"\" disabled>Year</option>\r\n//           {years.map((year) => (\r\n//             <option key={year} value={year}>{year}</option>\r\n//           ))}\r\n//         </select>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SelectDatePicker;\r\n\r\nimport React, { useState } from 'react';\r\nimport Select from 'react-select';\r\nimport '../Custom.css'; \r\n\r\nconst SelectDatePicker = () => {\r\n  const [selectedDay, setSelectedDay] = useState('');\r\n  const [selectedMonth, setSelectedMonth] = useState('');\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n\r\n  const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].map(day => ({ label: day, value: day }));\r\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'].map(month => ({ label: month, value: month }));\r\n  const years = Array.from({ length: 10 }, (_, i) => new Date().getFullYear() - 5 + i).map(year => ({ label: year, value: year }));\r\n\r\n  const handleDayChange = (selectedOption) => {\r\n    setSelectedDay(selectedOption);\r\n  };\r\n\r\n  const handleMonthChange = (selectedOption) => {\r\n    setSelectedMonth(selectedOption);\r\n  };\r\n\r\n  const handleYearChange = (selectedOption) => {\r\n    setSelectedYear(selectedOption);\r\n  };\r\n\r\n  const customStyles = {\r\n    control: (provided) => ({\r\n      ...provided,\r\n      backgroundColor: 'transparent',\r\n      border: 'none',\r\n       // Set background color to transparent\r\n    }),\r\n    singleValue: (provided) => ({\r\n      ...provided,\r\n      color: 'white', // Set color to white\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <div className=\"input block w-full placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:outline-none focus:ring-white-300 sm:text-sm sm:leading-6 border-2 border-gray-600 rounded-md  text-gray-700 dark:text-gray-400 \">\r\n      <div className=\"flex space-x-2\">\r\n        <Select\r\n          value={selectedDay}\r\n          onChange={handleDayChange}\r\n          options={days}\r\n          className=\" rounded-md focus:outline-none text-sm\"\r\n          placeholder=\"Day\"\r\n          styles={customStyles}\r\n        />\r\n        <Select\r\n          value={selectedMonth}\r\n          onChange={handleMonthChange}\r\n          options={months}\r\n          className=\" rounded-md focus:outline-none text-sm\"\r\n          placeholder=\"Month\"\r\n          styles={customStyles}\r\n        />\r\n        <Select\r\n          value={selectedYear}\r\n          onChange={handleYearChange}\r\n          options={years}\r\n          className=\" rounded-md focus:outline-none text-sm w-23\"\r\n          placeholder=\"Year\"\r\n          styles={customStyles}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectDatePicker;\r\n\r\n\r\n\r\n","\r\nimport React, { useState, useEffect, Navigate } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Map from \"../Map\";\r\nimport UpcomingEvents from \"../EventDetails/UpcomingEvents\";\r\nimport axios from 'axios';\r\nimport '../Custom.css'; \r\nimport 'rc-time-picker/assets/index.css';\r\nimport TimePicker from \"../TimePicker\";\r\nimport Loader from \"react-js-loader\";\r\nimport { Link } from 'react-router-dom';\r\nimport ViewLayout from \"../../Modal/ViewLayout\";\r\n\r\nimport DatePicker from \"../DatePicker\";\r\nimport { ToastContainer, toast } from 'react-toastify';  \r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport DOB from \"../Dob\";\r\nimport SelectDatePicker from \"../SelectDatePicker\";\r\n\r\n\r\n    const EventDetails = () => {\r\n        const navigate = useNavigate()\r\n       \r\n        const [mySection, setMySection] = useState(null);\r\n        const { id } = useParams();\r\n        const [numberOfEvents, setNumberOfEvents] = useState(null);\r\n        const [isModalOpen, setModalOpen] = useState(false);\r\n        const [startTime] = useState(null);\r\n        const [dob, setDob] = useState('');\r\n        const [date] = useState(null);\r\n        const [bookingNote] = useState(\"\");\r\n        const [guestsNumber] = useState(0);\r\n        const [eventDetails, setEventDetails] = useState(null);\r\n        const [eventId, setEventId] = useState('')\r\n        const [loader, setLoader] = useState(true)\r\n        const [isPopupOpen, setPopupOpen] = useState(false);\r\n        const [events, setEvents] = useState([]);\r\n        const [error, setError] = useState(null);\r\n        const [formSubmitted, setFormSubmitted] = useState(false);\r\n        const [venueId, setVenueId] = useState(25);\r\n        const [selectedDate, setSelectedDate] = useState(new Date());\r\n        // const [selectedOption, setSelectedOption] = useState('');\r\n        // const [showTextarea, setShowTextarea] = useState(false);\r\n\r\n        const [showTextarea, setShowTextarea] = useState(false);\r\n        const [selectedOption, setSelectedOption] = useState('select');\r\n        const [isLabelHidden, setIsLabelHidden] = useState(false);\r\n        \r\n        const handleLabelClick = () => {\r\n          setIsLabelHidden(true);\r\n        };\r\n        // const handdleClick = (e) => {\r\n        //   e.preventDefault(); // Prevents default browser behavior\r\n        // };\r\n    \r\n        //handleButtonClick redirect  venue page\r\n        const handleButtonClick = () => {\r\n          navigate(`/venue/${venueId}`);\r\n        };\r\n    // Section  localStorage  remove\r\n        useEffect(()=>{\r\n            localStorage.removeItem('Section');\r\n        },[])\r\n    \r\n        const [formData, setFormData] = useState({\r\n            section: \"\",\r\n            arrival_time: \"\",\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            phone: \"\",\r\n            email: \"\",\r\n            dob: \"\",\r\n            booking_note: \"\",\r\n            no_of_seats: \"\",\r\n            // agreeTerms: false,\r\n        });\r\n    \r\n        const handdleClick = (e) => {\r\n          e.preventDefault(); // Prevents default browser behavior\r\n        };\r\n       \r\n        const [arrivalTime, setArrivalTime] = useState(null);\r\n    \r\n        const handleTimeChange = (value) => {\r\n            setArrivalTime(value);\r\n        };\r\n        const handleClick = () => {\r\n            \r\n            setModalOpen(!isModalOpen); // Toggle the visibility of both the initial popup and ViewLayout modal\r\n        };\r\n    \r\n        const closeModal = () => {\r\n            setModalOpen(false);\r\n        };\r\n    \r\n        \r\n      \r\n        const handleInputChange = (event) => {\r\n            setDob(event.target.value);\r\n        };\r\n    \r\n        // Function to validate the date format (optional)\r\n        const isValidDateFormat = (dateString) => {\r\n            // You can implement your date format validation logic here\r\n            // For simplicity, let's assume any non-empty string is valid\r\n            // return dateString.trim() !== '';\r\n    \r\n        };\r\n     \r\n      //   function handleSelectChange(event) {\r\n      //     const selectedValue = event.target.value;\r\n      //     setSelectedOption(selectedValue);\r\n      //     setShowTextarea(selectedValue === 'other');\r\n      // }\r\n  \r\n     \r\n        \r\n\r\n      \r\n        \r\n    \r\n        const isValidFormData = () => {\r\n            // Implement your validation logic here\r\n            return true; // For demonstration, always return true\r\n        };\r\n     \r\n        const handleSubmit = async (e) => {\r\n          e.preventDefault();\r\n  \r\n          if (!isValidFormData()) {\r\n              // Show error toast for invalid form data\r\n              toast.error('Please fill out all required fields.', {\r\n                  position: 'top-center',\r\n                  autoClose: 1000,\r\n              });\r\n              return;\r\n          }\r\n  \r\n          // Capture form data\r\n          const formData = {\r\n              section: document.getElementById('section').value,\r\n              // arrival_time: arrivalTime,\r\n              arrival_time: arrivalTime && arrivalTime.format('HH:mm'),\r\n              first_name: document.getElementById('first_name').value,\r\n              last_name: document.getElementById('last_name').value,\r\n              phone: document.getElementById('phone').value,\r\n              email: document.getElementById('email').value,\r\n              // dob: document.getElementById('dob').value,\r\n              dob: dob, // Assign the dob directly here\r\n              booking_note: document.getElementById('booking_note_select').value,\r\n              no_of_seats: document.getElementById('no_of_seats').value,\r\n              // agreeTerms: document.getElementById('agreeTerms').checked,\r\n              venue_id: eventDetails.venue_id, // Replace with the actual venue_id\r\n              event_id: eventDetails.id, // Replace with the actual event_id\r\n          };\r\n          // if (!isValidDateFormat(dob)) {\r\n          //     // Display an error message for invalid date format\r\n          //     toast.error('Invalid date of birth format.', {\r\n          //         position: 'top-center',\r\n          //         autoClose: 1000,\r\n          //     });\r\n          //     return;\r\n          // }\r\n  \r\n          try {\r\n              const response = await axios.post(\"https://event-backend.isdemo.in/api/v1/ticketbooking\", formData);\r\n  \r\n              if (response.status === 200) {\r\n                  console.log(\"Form submitted successfully!\");\r\n                  // Add any additional logic or redirection after successful form submission\r\n              } else {\r\n                  console.error(\"Form submission failed.\");\r\n              }\r\n          } catch (error) {\r\n              console.error(\"Error during form submission:\", error);\r\n          }\r\n  \r\n          // Display success toast\r\n          toast.success('Form submitted successfully!', {\r\n              position: 'top-center',\r\n              autoClose: 1000,\r\n          });\r\n  \r\n          // Wait for a moment before refreshing the page\r\n          setTimeout(() => {\r\n              // Refresh the page\r\n              //window.location.reload();\r\n          }, 3000); // Adjust the time according to your needs\r\n      };\r\n  \r\n       \r\n        const [value, setValue] = useState('');\r\n\r\n        // Function to handle changes in the input\r\n        const handleChange = (e) => {\r\n          // Remove any non-numeric character\r\n          const sanitizedValue = e.target.value.replace(/\\D/g, '');\r\n          console.log(sanitizedValue);\r\n      \r\n          // Update the state with the sanitized value\r\n          setValue(sanitizedValue);\r\n        };\r\n    \r\n    \r\n        useEffect(() => {\r\n            const fetchEventDetails = async () => {\r\n                try {\r\n                    const response = await axios.get(`https://event-backend.isdemo.in/api/v1/event_single_list?id=${id}`);\r\n                    console.log('Event Details API Response:', response.data);\r\n                    console.log('venueId:', venueId);\r\n    \r\n                    if (response.data.id == id) {\r\n                        setEventDetails(response.data);\r\n                        setLoader(false)\r\n                        const venueResponse = await axios.post(\r\n                          `https://event-backend.isdemo.in/api/v1/venue_detail`,\r\n                          { id: response.data.venue_id } // Assuming venue_id is the parameter expected by the API\r\n                      );\r\n                      console.log('Venue Details API Response:', venueResponse.data);\r\n                    }\r\n                    else {\r\n                        setLoader(false)\r\n                        setEventDetails(null);\r\n                    }\r\n                } catch (error) {\r\n                    setLoader(false)\r\n                    return navigate(`/event`)\r\n    \r\n                }\r\n            };\r\n    \r\n            fetchEventDetails();\r\n        }, [id]);\r\n    \r\n        const fetchDataByDateAndVenue = async () => {\r\n            console.log(venueId);\r\n            try {\r\n                const response = await axios.get(`https://event-backend.isdemo.in/api/v1/events_date`, {\r\n                    params: {\r\n                        venue_id: venueId,\r\n                        date_search: selectedDate,\r\n                    },\r\n                });\r\n    \r\n                console.log('API Response:', response.data);\r\n    \r\n                // Handle the response as needed...\r\n                setEvents(response.data.events);\r\n            } catch (error) {\r\n                console.error('Error during API request:', error);\r\n                // Handle errors if needed\r\n            }\r\n        };\r\n    \r\n        // useEffect to fetch data when the selectedDate or id changes\r\n        useEffect(() => {\r\n            fetchDataByDateAndVenue();\r\n        }, [selectedDate, venueId]);\r\n    \r\n        useEffect(() => {\r\n            setMySection(localStorage.getItem('Section'));\r\n        }, )\r\n       \r\n    \r\n          const handleDobChange = (start) => {\r\n            console.log(start,\"testing is now done\")\r\n            setDob(start);\r\n          \r\n          };\r\n          const handleSelectChange = (event) => {\r\n            const selectedValue = event.target.value;\r\n            if (selectedValue === 'other') {\r\n                document.getElementById('booking_note_textarea').style.display = 'block';\r\n            } else {\r\n                document.getElementById('booking_note_textarea').style.display = 'none';\r\n            }\r\n        };\r\n    \r\n        if (loader) {\r\n            return (\r\n                <Loader type=\"spinner-cub\" bgColor={'white'} color={'white'} size={100} />\r\n            )\r\n        }\r\n  return (\r\n    <>\r\n    <div id=\"evnet_booking\">\r\n    <div className=\"md:container md:mx-auto\">\r\n      <div className=\"relative p-4 bg-color rounded-lg  sm:p-5\">\r\n        <div className=\"grid grid-cols-1 grid-cols-1 sm:grid-cols-2 gap-4\">\r\n          \r\n          <div className=\"container mx-auto px-4\">\r\n            <div className=\"max-w-4xl mx-auto\">\r\n              <div className=\"w-full\">\r\n                {eventDetails && (\r\n                  <img src={eventDetails.featured_image ?? \"\"} alt=\"cart\" />\r\n                )}\r\n              </div>\r\n            </div>\r\n          \r\n          </div>\r\n          <div className=\"container mx-auto px-4\">\r\n            \r\n              <div class=\"max-w-4xl mx-auto\">\r\n                  <div class=\"grid md:grid-cols-2 md:gap-6\">\r\n                          <div class=\"relative z-10 w-full mb-5 group\">\r\n                                <div className=\"w-full\"> \r\n\r\n                            \r\n                              <SelectDatePicker  placeholder='Select Date' onChange={handleDobChange}  utcOffset={new Date().getTimezoneOffset()}/>\r\n                              </div>\r\n                        \r\n                          </div>\r\n                      <div class=\"relative z-0 w-full mb-5 group table-section\">\r\n                      <button\r\n                        className=\"input block w-full placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:outline-none focus:ring-white-300 sm:text-sm sm:leading-6 border-2 border-gray-600 rounded-md px-4 py-2 text-gray-700 dark:text-gray-400\"\r\n                        onClick={handleClick}\r\n                      >\r\n                        Table Selection\r\n                      </button>\r\n                      {isModalOpen && (\r\n                        <ViewLayout\r\n                          isOpen={isModalOpen}\r\n                          onRequestClose={closeModal}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                      </div>\r\n                  </div>\r\n                  <form class=\"max-w-4xl mx-auto\" onSubmit={handleSubmit}>\r\n                    \r\n                    <div class=\"grid md:grid-cols-2 md:gap-6\">\r\n                      <div class=\"relative z-0 w-full mb-5 group\">\r\n                        <input\r\n                          name=\"Preffered Section\"\r\n                          id=\"section\"\r\n                          className={`block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer bg-transparent ${\r\n                            mySection ? \"highlight-input\" : \"\"\r\n                          }`}\r\n                          placeholder=\"\"\r\n                          value={mySection || \"\"}\r\n                        />\r\n                        <label\r\n                          for=\"section\"\r\n                          class=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6 bg-transparent\"\r\n                        >\r\n                          Preffered Section\r\n                        </label>\r\n                      </div>\r\n                      <div class=\"relative z-0 w-full mb-5 group\">\r\n                    \r\n                    <div className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\">\r\n                    <TimePicker  onTimeChange={handleTimeChange}   />\r\n                    </div>\r\n                      \r\n                     \r\n                      </div>\r\n                    </div>\r\n                    <div class=\"grid md:grid-cols-2 md:gap-6\">\r\n                    \r\n                      <div class=\"relative z-0 w-full mb-5 group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"first_name\"\r\n                        class=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer bg-transparent\"\r\n                        placeholder=\" \"\r\n                        required\r\n                    />\r\n                      <label\r\n                          for=\"first_name\"\r\n                          class=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6 bg-transparent\"\r\n                      >\r\n                          First name\r\n                      </label>\r\n      </div>\r\n\r\n                      <div class=\"relative z-0 w-full mb-5 group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          // name=\"last_name\"\r\n                          id=\"last_name\"\r\n                          class=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer bg-transparent\"\r\n                          placeholder=\" \"\r\n                          required\r\n                          \r\n                        />\r\n                        <label\r\n                          for=\"last_name\"\r\n                          class=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6 bg-transparent\"\r\n                        >\r\n                          Last name\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"grid md:grid-cols-2 md:gap-6\">\r\n                      <div class=\"relative z-0 w-full mb-5 group\">\r\n                        <input\r\n                          // type=\"tel\"\r\n                          // pattern=\"[0-9]{10}\"\r\n                          \r\n                          // class=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer bg-transparent\"\r\n                          // placeholder=\" \"\r\n                          // required\r\n                          id=\"phone\"\r\n                          type=\"tel\"\r\n                          value={value}\r\n                          onChange={handleChange}\r\n                          className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer bg-transparent\"\r\n                          placeholder=\" \"\r\n                          required\r\n                          inputMode=\"numeric\"\r\n                          \r\n                          \r\n                        />\r\n                        <label\r\n                          for=\"phone\"\r\n                          class=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6 bg-transparent\"\r\n                        >\r\n                          Phone Number\r\n                        </label>\r\n                      </div>\r\n                      <div class=\"relative z-0 w-full mb-5 group\">\r\n                    \r\n                          <input\r\n                                              type=\"email\"\r\n                                              name=\"email\"\r\n                                              id=\"email\"\r\n                                              class=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n                                              placeholder=\" \"\r\n                                              required\r\n                                              onClick={handdleClick}\r\n                                          />\r\n                        <label\r\n                          for=\"email\"\r\n                          class=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6 bg-transparent\"\r\n                        >\r\n                          Email\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                \r\n                  \r\n                      <div className=\"relative z-10 w-full mb-5 group\">\r\n                        <div  class=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 focus:outline-none focus:ring-0  peer bg-transparent\"\r\n                        placeholder=\" \"\r\n                        required>\r\n                      \r\n                        <DOB  placeholder='Date of Birth' onChange={handleDobChange}  utcOffset={new Date().getTimezoneOffset()}/>\r\n                      </div>\r\n                      </div>\r\n                  \r\n                  \r\n                      <div className=\"relative z-0 w-full mb-5 group\">\r\n                          \r\n                    <select\r\n                      id=\"booking_note_select\"\r\n                      name=\"booking_note\"\r\n                      className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n                      onChange={handleSelectChange}\r\n                    >\r\n                      {/* <option value=\"\" className=\"booking-notes\">\r\n                      Booking Note:\r\n                      </option> */}\r\n                      <option value=\"\"  className=\"booking-notes\"></option>\r\n                      <option value=\"birthday\">Birthday Celebration</option>\r\n                      <option value=\"anniversary\">Anniversary Party</option>\r\n                      <option value=\"graduation\">Graduation Dinner</option>\r\n                      <option value=\"other\">Other</option>\r\n                    </select>{\" \"}\r\n                  \r\n                    <textarea\r\n                      id=\"booking_note_textarea\"\r\n                      name=\"other_event_note\"\r\n                      className=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n                      placeholder=\"Your occasion or special request?\"\r\n                      style={{ display: \"none\" }}\r\n                    />\r\n        \r\n                        {\r\n                          <label\r\n                          \r\n                            for=\"booking_note\"\r\n                            class=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\r\n                          >\r\n                            Booking Note:\r\n                          </label>\r\n                        }\r\n                      </div>\r\n                    \r\n                    <div class=\"relative z-10 w-full mb-5 group\">\r\n                      <input\r\n                        type=\"number\"\r\n                        // name=\"no_of_seats\"\r\n                        id=\"no_of_seats\"\r\n                        class=\"block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\"\r\n                        placeholder=\" \"\r\n                        required\r\n                        min=\"1\"\r\n                      \r\n                      />\r\n                      <label\r\n                        for=\"no_of_seats\"\r\n                        class=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\"\r\n                      >\r\n                        Total Guests:\r\n                      </label>\r\n                    </div>\r\n        \r\n                    {/* <button\r\n                      type=\"submit\"\r\n                      class=\"text-white bg-blue-800 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full w-full px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n                    >\r\n                      Submit\r\n                    </button> */}\r\n                    <button\r\n          type=\"submit\"\r\n          class=\"text-white bg-blue-800 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full w-full px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800 submit-btn-ticket\"\r\n      >\r\n          Submit\r\n      </button>\r\n\r\n                  </form>\r\n                <ToastContainer />\r\n                \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n   <div id=\"evnet_page_main\">\r\n   <div className=\"container mx-auto px-4\">\r\n     <h1 className=\"text-center\"> Upcoming Event</h1>\r\n     <p className=\"text-center\">\r\n       Your time is limited, don’t waste it living someone else’s life. Don’t be\r\n       trapped by dogma, which is living the result of other people’s thinking.{\" \"}\r\n       <br />\r\n       Don’t let the noise of other opinions drown your own inner voice.\r\n     </p>\r\n     <div className=\"flex justify-end mt-10\">\r\n       <button\r\n         className=\"hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full current-event view-venue\"\r\n         type=\"button\"\r\n       >\r\n         <a href=\"/venue\" className='current-event'>View All</a>\r\n       </button>\r\n     </div>\r\n   </div>\r\n   <div className=\"container mx-auto px-4\">\r\n   <UpcomingEvents venueId={venueId} />\r\n   </div>\r\n   </div>\r\n  \r\n  </>\r\n\r\n  )\r\n}\r\n\r\nexport default EventDetails\r\n","import React from 'react'\r\n// import FOF from '../Home/Assets/emprty.png'\r\nimport FOF from '../../assets/images/imgpsh_fullsize_anim.png';\r\n\r\n\r\n\r\nconst Event = () => {\r\nreturn (\r\n  <div id=\"evnet_booking\">\r\n  <div className=\"md:container md:mx-auto\">\r\n    <div className=\"relative p-4 bg-color rounded-lg shadow dark:bg-gray-800 sm:p-5\">\r\n    <div class=\"py-8 px-4 mx-auto max-w-screen-xl lg:py-16 lg:px-6\">\r\n        <section class=\"bg-transparent dark:bg-gray-900\">\r\n          <div class=\"mx-auto max-w-screen-sm text-center\">\r\n              <h1 class=\"mb-4 text-7xl tracking-tight font-extrabold lg:text-9xl text-primary-600 dark:text-primary-500\">\r\n                <div>\r\n                  {/* <img src={FOF} alt=\"404\" /> */}\r\n                </div>\r\n              </h1>\r\n              {/* <p class=\"mb-4 text-lg font-light text-gray-500 dark:text-gray-400\">Sorry we cant find that page. You'll find lots to explore on the home page </p> */}\r\n              <p class=\"mb-4 text-lg font-light text-gray-500 dark:text-gray-400\">plase check your venue id </p>\r\n              <a href=\"/\" class=\"inline-flex text-white bg-primary-600 hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:focus:ring-primary-900 my-4\">Back to Event Page</a>\r\n          </div>  \r\n        </section> \r\n    </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n  );\r\n};\r\n\r\nexport default Event","// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import moment from 'moment';\r\n// // import { useParams } from 'react-router-dom';\r\n// import { useParams, useNavigate,Link  } from 'react-router-dom';\r\n// import '../Custom.css'; \r\n// import Loader from \"react-js-loader\";\r\n\r\n// export default function Index() {\r\n//     const [eventList, setEventList] = useState([]);\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [error, setError] = useState(null);\r\n//     const navigate = useNavigate();\r\n//     const { venueId } = useParams();\r\n  \r\n   \r\n//     useEffect(() => {\r\n//       console.log('Fetching data for venueId:', venueId);\r\n//       const fetchData = async () => {\r\n//         try {\r\n//           // Encode the venueId parameter\r\n//           const encodedVenueId = encodeURIComponent(venueId);\r\n  \r\n//           // Make the API request using the encoded venueId\r\n//           const response = await axios.get(`https://event-backend.isdemo.in/api/v1/event?venue_id=${venueId}`);\r\n//           console.log('API Response:', response.data);\r\n  \r\n//           setEventList(response.data.data);\r\n//         } catch (error) {\r\n//           console.error('Error fetching data:', error);\r\n//           setError('Error fetching data. Please try again.');\r\n//         } finally {\r\n//           setLoading(false);\r\n//         }\r\n//       };\r\n  \r\n//       fetchData();\r\n//     }, [venueId]);\r\n  \r\n//     if (loading) {\r\n//       // Show loader while loading is true\r\n//       return <Loader type=\"spinner-cub\" bgColor={'white'} color={'white'} size={100} />;\r\n//     }\r\n//   return (\r\n//     <div id=\"evnet_page_main\">\r\n//   <div className=\"container mx-auto px-4\">\r\n//     <h1 class=\"text-center\"> Events List</h1>\r\n//     <p class=\"text-center\">\r\n//       Your time is limited, don’t waste it living someone else’s life. Don’t be\r\n//       trapped by dogma, which is living the result of other people’s thinking.{\" \"}\r\n//       <br />\r\n//       Don’t let the noise of other opinions drown your own inner voice.\r\n//     </p>\r\n//   </div>\r\n//   <div className=\"container mx-auto px-4\">\r\n//     <div className=\"events_box\">\r\n//       <div className=\"events\">\r\n//         <table class=\"event\">\r\n//           <thead>\r\n//             <tr>\r\n//               <td>Date</td>\r\n//               <td class=\"event-thumb-head\"></td>\r\n//               <td>Artist</td>\r\n//               <td>Event</td>\r\n//               <td>Ticket</td>\r\n//             </tr>\r\n//             <tr class=\"space\">\r\n//               <td>&nbsp;</td>\r\n//             </tr>\r\n//           </thead>\r\n\r\n//           <tbody>\r\n//             {eventList.map((item, index) => (\r\n//               <React.Fragment key={index}>\r\n//                 <tr>\r\n//                   <td className=\"event-date\">\r\n//                     {moment(item.date).format(\"DD/MM/YYYY\")}\r\n//                   </td>\r\n//                   <td className=\"event-thumb\">\r\n//                     <Link to={`/event/${item.id}`}>\r\n//                       <img\r\n//                         width=\"90px\"\r\n//                         height=\"100px\"\r\n//                         src={item.featured_image}\r\n//                         alt=\"Event\"\r\n//                       />\r\n//                     </Link>\r\n//                   </td>\r\n//                   <td className=\"event-artist\">{item.name}</td>\r\n//                   <td className=\"event-title\">\r\n//                     <Link to={`/event/${item.id}`}>{item.name}</Link>\r\n//                   </td>\r\n//                   <td className=\"event-ticket-link\">\r\n//                     {item.ticket_status === \"available\" ? (\r\n//                       <Link\r\n//                         to={`/book/${item.id}`}\r\n//                         className=\"button button-white rsvp\"\r\n//                       >\r\n//                         BOOK\r\n//                       </Link>\r\n//                     ) : (\r\n//                       <span className=\"sold\">EXPIRED</span>\r\n//                     )}\r\n//                   </td>\r\n//                 </tr>\r\n//                 <tr className=\"space h-10\">\r\n//                   <td colSpan=\"5\"></td>\r\n//                 </tr>\r\n//               </React.Fragment>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     </div>\r\n//     <div class=\"event-mobile\">\r\n//       <ul className=\"event-list\">\r\n//         {eventList.map((item, index) => (\r\n//           <li key={index}>\r\n//             <span className=\"img-thumb\">\r\n//               <a href={`/event/${item.id}`}>\r\n//                 <img\r\n//                   width=\"70px\"\r\n//                   height=\"100px\"\r\n//                   src={item.featured_image}\r\n//                   alt=\"Event\"\r\n//                 />\r\n//               </a>\r\n//             </span>\r\n//             <p>\r\n//               <span>Date :</span>{\" \"}\r\n//               <a href={`/event/${item.id}`}>\r\n//                 {moment(item.date).format(\"DD/MM/YYYY\")}\r\n//               </a>\r\n//             </p>\r\n//             <p>\r\n//               <span>Artist :</span>{\" \"}\r\n//               <a href={`/event/${item.id}`}>{item.name}</a>\r\n//             </p>\r\n//             <p>\r\n//               <span>Event :</span> <a href={`/event/${item.id}`}>{item.name}</a>\r\n//             </p>\r\n//             <p>\r\n//               {item.ticket_status === \"available\" ? (\r\n//                 <a href={`/book/${item.id}`} className=\"button-basic-1\">\r\n//                   BUY TICKET\r\n//                 </a>\r\n//               ) : (\r\n//                 <span className=\"sold\">TICKET SOLD OUT</span>\r\n//               )}\r\n//             </p>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   </div>\r\n// </div>\r\n\r\n//   )\r\n// }\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n// import { useParams } from 'react-router-dom';\r\nimport { useParams, useNavigate,Link  } from 'react-router-dom';\r\nimport '../Custom.css'; \r\nimport Loader from \"react-js-loader\";\r\n\r\nconst Venue = () => {\r\n  const [eventList, setEventList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n  const { venueId } = useParams();\r\n  const [vid,setVid]=useState(\"\")\r\n\r\n \r\n  useEffect(() => {\r\n    console.log('Fetching data for venueId:', venueId);\r\n    const fetchData = async () => {\r\n      try {\r\n        // Encode the venueId parameter\r\n        const encodedVenueId = encodeURIComponent(venueId);\r\n\r\n        console.log(venueId,\"id incoming is===>>\")\r\n        if(!venueId || venueId === \"null\" || venueId === \"undefined\"){\r\n          setVid(\"25\")\r\n        }\r\n        else{\r\n          setVid(venueId)\r\n        }\r\n\r\n\r\n        console.log(vid,\"tesing ===>>\")\r\n\r\n        // Make the API request using the encoded venueId\r\n        const response = await axios.get(`https://event-backend.isdemo.in/api/v1/event?venue_id=${vid}`);\r\n        console.log('API Response:', response.data);\r\n\r\n        setEventList(response.data.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setError('Error fetching data. Please try again.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, );\r\n\r\n  if (loading) {\r\n    // Show loader while loading is true\r\n    return <Loader type=\"spinner-cub\" bgColor={'white'} color={'white'} size={100} />;\r\n  }\r\n    return (\r\n      <div id=\"evnet_page_main\">\r\n        <div className=\"container mx-auto px-4\">\r\n          <h1 className=\"text-center\"> Event List</h1>\r\n          <p className=\"text-center\">\r\n            Your time is limited, don’t waste it living someone else’s life. Don’t be\r\n            trapped by dogma, which is living the result of other people’s thinking.{\" \"}\r\n            <br />\r\n            Don’t let the noise of other opinions drown your own inner voice.\r\n          </p>\r\n          <div className=\"flex justify-end mt-10\">\r\n            <button\r\n              className=\"hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full current-event\"\r\n              type=\"button\"\r\n            >\r\n              <a href=\"/pastevent\" className='current-event'>Past Event</a>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"container mx-auto px-4\">\r\n          <div className=\"events_box\">\r\n            <div className=\"events\">\r\n              <table className=\"event\">\r\n                <thead>\r\n                  <tr>\r\n                    <td>Date</td>\r\n                    <td className=\"event-thumb-head\">Event Image</td>\r\n                    {/* <td>Artist</td> */}\r\n                    <td>Event</td>\r\n                    <td>Ticket</td>\r\n                  </tr>\r\n                  <tr className=\"space\">\r\n                    <td>&nbsp;</td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {eventList.map((item, index) => (\r\n                    <React.Fragment key={index}>\r\n                      <tr>\r\n                        <td className=\"event-date\">\r\n                          {moment(item.date_from).format(\"DD/MM/YYYY\")}\r\n                        </td>\r\n                        <td className=\"event-thumb\">\r\n                          <Link to={`/event/${item.id}`}>\r\n                            <img\r\n                              width=\"90px\"\r\n                              height=\"100px\"\r\n                              src={item.featured_image}\r\n                              alt=\"Event\"\r\n                            />\r\n                          </Link>\r\n                        </td>\r\n                        {/* <td className=\"event-artist\">{item.name}</td> */}\r\n                        <td className=\"event-title\">\r\n                          <Link to={`/event/${item.id}`}>{item.name}</Link>\r\n                        </td>\r\n                        <td className=\"event-ticket-link\">\r\n                          {item.past ? (\r\n                            <span className=\"sold\">EXPIRED</span>\r\n                          ) : (\r\n                            <Link\r\n                              to={`/event/${item.id}`}\r\n                              className=\"button button-white rsvp\"\r\n                            >\r\n                              BOOK\r\n                            </Link>\r\n                          )}\r\n                          {item.past && (\r\n                            <Link\r\n                              to={`/pastevent/${item.id}`}\r\n                              className=\"button button-white rsvp\"\r\n                            >\r\n                              BOOK\r\n                            </Link>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr className=\"space h-10\">\r\n                        <td colSpan=\"5\"></td>\r\n                      </tr>\r\n                    </React.Fragment>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div className=\"event-mobile\">\r\n            <ul className=\"event-list\">\r\n              {eventList.map((item, index) => (\r\n                <li key={index}>\r\n                  <span className=\"img-thumb\">\r\n                    <a href={`/event/${item.id}`}>\r\n                      <img\r\n                        width=\"70px\"\r\n                        height=\"100px\"\r\n                        src={item.featured_image}\r\n                        alt=\"Event\"\r\n                      />\r\n                    </a>\r\n                  </span>\r\n                  <p>\r\n                    <span>Date :</span>{\" \"}\r\n                    <a href={`/event/${item.id}`}>\r\n                      {moment(item.date_from).format(\"DD/MM/YYYY\")}\r\n                    </a>\r\n                  </p>\r\n                  <p>\r\n                    <span>Artist :</span>{\" \"}\r\n                    <a href={`/event/${item.id}`}>{item.name}</a>\r\n                  </p>\r\n                  <p>\r\n                    <span>Event :</span>{\" \"}\r\n                    <a href={`/event/${item.id}`}>{item.name}</a>\r\n                  </p>\r\n                  <p>\r\n                    {item.past ? (\r\n                      <span>\r\n                        EXPIRED&nbsp;\r\n                        <Link\r\n                          to={`/event/${item.id}`}\r\n                          className=\"button-basic-1\"\r\n                        >\r\n                          BUY TICKET\r\n                        </Link>\r\n                      </span>\r\n                    ) : (\r\n                      <Link\r\n                        to={`/event/${item.id}`}\r\n                        className=\"button-basic-1\"\r\n                      >\r\n                        BUY TICKET\r\n                      </Link>\r\n                    )}\r\n                  </p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Venue;","// VenuePage.jsx\r\nimport React from 'react';\r\n// import PaymentForm from './PaymentForm';\r\n\r\n\r\nconst VenuePage = () => {\r\n  return (\r\n    <div>\r\n      <h2>Venue Page</h2>\r\n      {/* Your VenuePage content */}\r\n \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VenuePage;\r\n\r\n","\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n// import { useParams } from 'react-router-dom';\r\nimport { useParams, useNavigate,Link  } from 'react-router-dom';\r\nimport '../Custom.css'; \r\nimport Loader from \"react-js-loader\";\r\n\r\nconst PastEvent = () => {\r\n  const [eventList, setEventList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n  const { venueId } = useParams();\r\n  const [vid,setVid]=useState(\"\")\r\n\r\n \r\n  useEffect(() => {\r\n    console.log('Fetching data for venueId:', venueId);\r\n    const fetchData = async () => {\r\n      try {\r\n        // Encode the venueId parameter\r\n        const encodedVenueId = encodeURIComponent(venueId);\r\n\r\n        console.log(venueId,\"id incoming is===>>\")\r\n        if(!venueId || venueId === \"null\" || venueId === \"undefined\"){\r\n          setVid(\"25\")\r\n        }\r\n        else{\r\n          setVid(venueId)\r\n        }\r\n\r\n\r\n        console.log(vid,\"tesing ===>>\")\r\n\r\n        // Make the API request using the encoded venueId\r\n        const response = await axios.get(`https://event-backend.isdemo.in/api/v1/past_events?venue_id=${vid}`);\r\n        console.log('API Response:', response.data);\r\n\r\n        setEventList(response.data.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setError('Error fetching data. Please try again.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, );\r\n\r\n  if (loading) {\r\n    // Show loader while loading is true\r\n    return <Loader type=\"spinner-cub\" bgColor={'white'} color={'white'} size={100} />;\r\n  }\r\n\r\n\r\n  return (\r\n    <div id=\"evnet_page_main\">\r\n      <div className=\"container mx-auto px-4\">\r\n        <h1 className=\"text-center\">Past Event List </h1>\r\n        <p className=\"text-center\">\r\n          Your time is limited, don’t waste it living someone else’s life. Don’t be\r\n          trapped by dogma, which is living the result of other people’s thinking.{\" \"}\r\n          <br />\r\n          Don’t let the noise of other opinions drown your own inner voice.\r\n        </p>\r\n        <div className=\"flex justify-end mt-10\">\r\n  <button\r\n    className=\"hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full current-event\"\r\n    type=\"button\"\r\n  >\r\n    <a href=\"/venue\" className='current-event'>Current Event</a>\r\n  </button>\r\n</div>\r\n      </div>\r\n      <div className=\"container mx-auto px-4\">\r\n        <div className=\"events_box\">\r\n          <div className=\"events\">\r\n            <table className=\"event\">\r\n              <thead>\r\n                <tr>\r\n                  <td>Date</td>\r\n                  <td className=\"event-thumb-head\">Event Image</td>\r\n                  {/* <td>Artist</td> */}\r\n                  <td>Event</td>\r\n                  <td>Ticket</td>\r\n                </tr>\r\n                <tr className=\"space\">\r\n                  <td>&nbsp;</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {eventList.map((item, index) => (\r\n                  <React.Fragment key={index}>\r\n                    <tr>\r\n                      <td className=\"event-date\">\r\n                        {moment(item.date_from).format(\"DD/MM/YYYY\")}\r\n                      </td>\r\n                      <td className=\"event-thumb\">\r\n                        {/* <Link to={`/event/${item.id}`}> */}\r\n                          <img\r\n                            width=\"90px\"\r\n                            height=\"100px\"\r\n                            src={item.featured_image}\r\n                            alt=\"Event\"\r\n                          />\r\n                        {/* </Link> */}\r\n                      </td>\r\n                      {/* <td className=\"event-artist\">{item.name}</td> */}\r\n                      <td className=\"event-title\">\r\n                        {/* <Link to={`/event/${item.id}`}>{item.name}</Link> */}\r\n                        {item.name}\r\n                      </td>\r\n                      <td className=\"event-ticket-link\">\r\n                        {item.past ? (\r\n                          <span className=\"sold\">Book</span>\r\n                        ) : (\r\n                          // <Link\r\n                          //   to={`//${item.id}`}\r\n                          //   className=\"button button-white rsvp expired\"\r\n                          // >\r\n                             <span    className=\"button button-white rsvp expired\">EXPIRED</span>\r\n                            \r\n                          // </Link>\r\n                        )}\r\n                      \r\n                      </td>\r\n                    </tr>\r\n                    <tr className=\"space h-10\">\r\n                      <td colSpan=\"5\"></td>\r\n                    </tr>\r\n                  </React.Fragment>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className=\"event-mobile\">\r\n          <ul className=\"event-list\">\r\n            {eventList.map((item, index) => (\r\n              <li key={index}>\r\n                <span className=\"img-thumb\">\r\n                  {/* <a href={`/event/${item.id}`}> */}\r\n                    <img\r\n                      width=\"70px\"\r\n                      height=\"100px\"\r\n                      src={item.featured_image}\r\n                      alt=\"Event\"\r\n                    />\r\n                  {/* </a> */}\r\n                </span>\r\n                <p>\r\n                  <span>Date :</span>{\" \"}\r\n                  <a href={`/event/${item.id}`}>\r\n                    {moment(item.date_from).format(\"DD/MM/YYYY\")}\r\n                  </a>\r\n                </p>\r\n                <p>\r\n                  <span>Artist :</span>{\" \"}\r\n                  <a href={`/event/${item.id}`}>{item.name}</a>\r\n                </p>\r\n                <p>\r\n                  <span>Event :</span>{\" \"}\r\n                  <a href={`/event/${item.id}`}>{item.name}</a>\r\n                </p>\r\n                <p>\r\n                  {item.past ? (\r\n                    <span>\r\n                      EXPIRED&nbsp;\r\n                      <Link\r\n                        to={`/event/${item.id}`}\r\n                        className=\"button-basic-1\"\r\n                      >\r\n                        BUY TICKET\r\n                      </Link>\r\n                    </span>\r\n                  ) : (\r\n                    <Link\r\n                      to={`/event/${item.id}`}\r\n                      className=\"button-basic-1\"\r\n                    >\r\n                      BUY TICKET\r\n                    </Link>\r\n                  )}\r\n                </p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PastEvent;\r\n","\n\n\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport './components/Custom.css';\nimport EventDetails from './components/EventDetails';\nimport Event from './components/Event';\nimport Venue from './components/Venue';\nimport VenuePage from './components/VenuePage';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport PastEvent from './components/PastEvent';\n// import './App.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst stripePromise = loadStripe('pk_test_51OeEfISBso2Dz2oFXsDTdixcoul4HkcrIRrfilFX5c7FKnq5eURTArDEwT4IDctoo6x3DP71KgFiw1VIXyjZaTzV00E5b3S0ij');\n\nconst App = () => {\n  return (\n    <Router>\n      <Routes>\n        {/* Default route */}\n        <Route path=\"/\" element={<Navigate to=\"/venue\" />} />\n        <Route path=\"/venue\" element={<Venue />} />\n        <Route path=\"/venue/:venueId\" element={<Venue />} />\n        <Route path=\"/event/:id\" element={<EventDetails />} />\n        <Route path=\"/event\" element={<Event />} />\n        <Route path=\"/pastevent\" element={<PastEvent />} />\n        <Route path=\"/venuepage\" element={<VenuePage />} />\n        {/* <Route\n          path=\"/checkout\"\n          element={\n            <Elements stripe={stripePromise}>\n              <PaymentForm />\n            </Elements>\n          }\n        /> */}\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}